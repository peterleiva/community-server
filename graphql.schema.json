{
	"__schema": {
		"queryType": {
			"name": "Query"
		},
		"mutationType": null,
		"subscriptionType": null,
		"types": [
			{
				"kind": "SCALAR",
				"name": "Avatar",
				"description": "An __Avatar__ (also known as a profile picture or userpic) is a graphical\nrepresentation of a user or the user's character or persona.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INPUT_OBJECT",
				"name": "BackwardPageInput",
				"description": "Enable backward pagination, slicing can be done with *last*. The *before* is a\nopaque cursor returned by *pageInfo*'s *startCursor* node",
				"fields": null,
				"inputFields": [
					{
						"name": "before",
						"description": "number of the page or last edges before this cursor",
						"type": {
							"kind": "SCALAR",
							"name": "Cursor",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "last",
						"description": "at most last edges",
						"type": {
							"kind": "SCALAR",
							"name": "NonNegativeInt",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "BigInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Boolean",
				"description": "The `Boolean` scalar type represents `true` or `false`.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Byte",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INTERFACE",
				"name": "Connection",
				"description": "*Connection* is in compliance with\n[*GraphQL Cursor Connections Specification*\n](https://relay.dev/graphql/connections.htm#sec-Connection-Types)\nto consistenly handle pagination best practices with support for slicing\nand *metadata* about the\nconnection itself",
				"fields": [
					{
						"name": "edges",
						"description": "relationship between two node on the graph",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "INTERFACE",
										"name": "Edge",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "pageInfo",
						"description": "additional information about the connection itself",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PageInfo",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": [
					{
						"kind": "OBJECT",
						"name": "PostParticipantsConnection",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "PostRepliesConnection",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "ThreadConnection",
						"ofType": null
					}
				]
			},
			{
				"kind": "SCALAR",
				"name": "Currency",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Cursor",
				"description": "The __Cursor__ is an opaque string used to navigate between pages,\naccording to [__GraphQL Cursor Connections Specification__\n](https://relay.dev/graphql/connections.htm#sec-Cursor)",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "DID",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Date",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "DateTime",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Duration",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INTERFACE",
				"name": "Edge",
				"description": "The concept of an [*edge*\n](https://relay.dev/graphql/connections.htm#sec-Edge-Types) also proves\nuseful if there is information that is specific to the edge, rather than to\none node, which means information about a connection instance.",
				"fields": [
					{
						"name": "cursor",
						"description": "Opaque cursor used to navigate through pages",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Cursor",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "node",
						"description": "This field must return either a Scalar, Enum, Object, Interface, Union, or\na Non-Null wrapper around one of those types. Notably, this field cannot\nreturn a list.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "INTERFACE",
								"name": "Node",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": [
					{
						"kind": "OBJECT",
						"name": "PostParticipantsEdge",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "PostReplyEdge",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "ThreadEdge",
						"ofType": null
					}
				]
			},
			{
				"kind": "SCALAR",
				"name": "EmailAddress",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INPUT_OBJECT",
				"name": "ForwardPageInput",
				"description": "Enable forward pagination, slicing can be done with *first*. The *after* is a\nopaque cursor returned by **pageInfo**'s **endCursor** node",
				"fields": null,
				"inputFields": [
					{
						"name": "after",
						"description": "number of the page or edges after this cursor",
						"type": {
							"kind": "SCALAR",
							"name": "Cursor",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "first",
						"description": "at most first edges",
						"type": {
							"kind": "SCALAR",
							"name": "NonNegativeInt",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "GUID",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "HSL",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "HSLA",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "HexColorCode",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Hexadecimal",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "IBAN",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "ID",
				"description": "The `ID` scalar type represents a unique identifier, often used to refetch an object or as key for a cache. The ID type appears in a JSON response as a String; however, it is not intended to be human-readable. When expected as an input type, any string (such as `\"4\"`) or integer (such as `4`) input value will be accepted as an ID.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "IPv4",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "IPv6",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "ISBN",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "ISO8601Duration",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "JSON",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "JSONObject",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "JWT",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Latitude",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "LocalDate",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "LocalEndTime",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "LocalTime",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Long",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Longitude",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "MAC",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "Naming",
				"description": "Naming is a way to calling users. Community users must have a nickname but\nnot necessary it has first or last names specified",
				"fields": [
					{
						"name": "first",
						"description": "user first name",
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "last",
						"description": "user last name",
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "nick",
						"description": "user nickname",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "NegativeFloat",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "NegativeInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INTERFACE",
				"name": "Node",
				"description": "Regular node which is returned by Edge type, it must have at least ID type",
				"fields": [
					{
						"name": "id",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": [
					{
						"kind": "OBJECT",
						"name": "Post",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "Thread",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "User",
						"ofType": null
					}
				]
			},
			{
				"kind": "SCALAR",
				"name": "NonEmptyString",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "NonNegativeFloat",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "NonNegativeInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "NonPositiveFloat",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "NonPositiveInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "ObjectID",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "PageInfo",
				"description": "[**PageInfo**\n](https://relay.dev/graphql/connections.htm#sec-undefined.PageInfo)\nis metadata information about **Connection** used to navigate providing\nintel about more previous or next pages. For example, *endCursor* can be used\nin to forwarding pagination argument",
				"fields": [
					{
						"name": "endCursor",
						"description": "corresponds the last node, also known as the last connection's edge",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Cursor",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "hasNextPage",
						"description": "indicate whether more edges exist following the set defined by the clients\narguments",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "hasPreviousPage",
						"description": "indicate whether more edges exist prior to the set defined by the clients\narguments",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "startCursor",
						"description": "corresponds the last node, also known as the first connection's edge",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Cursor",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INPUT_OBJECT",
				"name": "PageInput",
				"description": "Enable forward and backward pagination, slicing can be done with *first*\nand *last*. Opaque cursor is defined by *after* and *before* returned by\n**pageInfo**'s **endCursor** and *startCursor* node respectively.",
				"fields": null,
				"inputFields": [
					{
						"name": "after",
						"description": "number of the page or edges after this cursor",
						"type": {
							"kind": "SCALAR",
							"name": "Cursor",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "before",
						"description": "number of the page or last edges before this cursor",
						"type": {
							"kind": "SCALAR",
							"name": "Cursor",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "first",
						"description": "at most first edges",
						"type": {
							"kind": "SCALAR",
							"name": "NonNegativeInt",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "last",
						"description": "at most last edges",
						"type": {
							"kind": "SCALAR",
							"name": "NonNegativeInt",
							"ofType": null
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "PhoneNumber",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Port",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "PositiveFloat",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "PositiveInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "Post",
				"description": "An *Post* is an user-submitted message enclosed into a block containing the\nuser's details and the date and time it was submitted. Posts are contained in\nthreads, where they appear as blocks one after another. The first post starts\nthe thread; this may be called the OP (original post). Posts that follow in\nthe thread are meant to continue discussion about that post, or respond to\nother replies; it is not uncommon for discussions to be derailed.",
				"fields": [
					{
						"name": "author",
						"description": "post's author",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "User",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "createdAt",
						"description": "post' creation time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "id",
						"description": "post identifier",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "likes",
						"description": "amount of users who liked the post",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "NonNegativeInt",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "message",
						"description": "summarize the discussion proposed, detailed information about a topic",
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "replies",
						"description": "posts which replies to this one",
						"args": [
							{
								"name": "page",
								"description": null,
								"type": {
									"kind": "INPUT_OBJECT",
									"name": "ForwardPageInput",
									"ofType": null
								},
								"defaultValue": null,
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PostRepliesConnection",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "updatedAt",
						"description": "post' last update time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Node",
						"ofType": null
					},
					{
						"kind": "INTERFACE",
						"name": "Timestamps",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "PostParticipantsConnection",
				"description": "The **PostParticipantsConnection** represents an endpoint of an edge. It\ndefines **totalCount** metadata to count the number of distinct users",
				"fields": [
					{
						"name": "edges",
						"description": "user' edges",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "PostParticipantsEdge",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "interactions",
						"description": "total number of post's participants edges",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "NonNegativeInt",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "pageInfo",
						"description": "page information",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PageInfo",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Connection",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "PostParticipantsEdge",
				"description": "The **PostParticipantsEdge** is a connection between two nodes, each user\nedge endpoint doens't have any metadata and returns simple User node",
				"fields": [
					{
						"name": "cursor",
						"description": "user's edge cursor",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Cursor",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "node",
						"description": "node is a plain User type",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "User",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Edge",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "PostRepliesConnection",
				"description": "**PostRepliesConnection** represents self relationship between posts\nindicading a reply. A post can be a reply of another posts",
				"fields": [
					{
						"name": "edges",
						"description": "post's edges",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "PostReplyEdge",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "pageInfo",
						"description": "page information",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PageInfo",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Connection",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "PostReplyEdge",
				"description": "**PostReplyEdge** implements Edge's connection pattern, representing an\nendpoint from a relationship in any direction",
				"fields": [
					{
						"name": "cursor",
						"description": "post's cursor",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Cursor",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "node",
						"description": "node presents a simple post",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "Post",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Edge",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "PostalCode",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "Query",
				"description": null,
				"fields": [
					{
						"name": "threads",
						"description": "Get a list of all threads (also known as original posts), that's a thread\nstarter which originates a conversation. That list represents all top-level\nposts which can be paginated by the user",
						"args": [
							{
								"name": "page",
								"description": null,
								"type": {
									"kind": "INPUT_OBJECT",
									"name": "ForwardPageInput",
									"ofType": null
								},
								"defaultValue": null,
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "ThreadConnection",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "RGB",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "RGBA",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "SafeInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "String",
				"description": "The `String` scalar type represents textual data, represented as UTF-8 character sequences. The String type is most often used by GraphQL to represent free-form human-readable text.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "Thread",
				"description": "A thread (sometimes called a topic) is a collection of posts, although this\nis typically configurable: Options for newest to oldest and for a threaded\nview (a tree-like view applying logical reply structure before chronological\norder) can be available. A thread is defined by a title and an opening post\n(common abbreviation OP, which can also be used to refer to the original\nposter), which opens whatever dialogue or makes whatever announcement the\nposter wished. A thread can contain any number of posts, including multiple\nposts from the same members, even if they are one after the other.",
				"fields": [
					{
						"name": "createdAt",
						"description": "creation time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "id",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "lastActivity",
						"description": "newest reply",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "participants",
						"description": "all unique participants of the thread, which means all its op's replies\nand its entire subtree",
						"args": [
							{
								"name": "page",
								"description": null,
								"type": {
									"kind": "INPUT_OBJECT",
									"name": "ForwardPageInput",
									"ofType": null
								},
								"defaultValue": null,
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PostParticipantsConnection",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "post",
						"description": "Original post of the thread, also known as thread starter",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "Post",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "replies",
						"description": "quantity of replies under original post",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "NonNegativeInt",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "title",
						"description": "A brief introduction to the discussion, it intends to engage people around\na conversation",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "updatedAt",
						"description": "last update time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Node",
						"ofType": null
					},
					{
						"kind": "INTERFACE",
						"name": "Timestamps",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "ThreadConnection",
				"description": "Thread connection implements Connection defining edges, pageInfo and has the\ntotal number of threads in the community. The total number of threads refers\nto the quantity of raised topics, or beginning of an conversation",
				"fields": [
					{
						"name": "edges",
						"description": "connections between thread and posts",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "ThreadEdge",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "pageInfo",
						"description": "additional information about the pagination",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "PageInfo",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "total",
						"description": "number of threads in total",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "NonNegativeInt",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Connection",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "ThreadEdge",
				"description": "Thread edge implements Edge defining node and cursor but has specific metadata",
				"fields": [
					{
						"name": "cursor",
						"description": "opaque cursor",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Cursor",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "node",
						"description": "node is a simple thread",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "Thread",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Edge",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Time",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Timestamp",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "INTERFACE",
				"name": "Timestamps",
				"description": "The **Timestamps** is metadata information about a particular object. It\ntells when it was created and last updated. Notice: updatedAt doesn't store\nhistorical data only the last update date",
				"fields": [
					{
						"name": "createdAt",
						"description": "create date and time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "updatedAt",
						"description": "last update date and time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": [
					{
						"kind": "OBJECT",
						"name": "Post",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "Thread",
						"ofType": null
					},
					{
						"kind": "OBJECT",
						"name": "User",
						"ofType": null
					}
				]
			},
			{
				"kind": "SCALAR",
				"name": "URL",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "USCurrency",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "UUID",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "UnsignedFloat",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "UnsignedInt",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "User",
				"description": "Refers to utilizers of the system. At first people can initiate an\n*original post (OP)*, beginning a topic or just join a conversation through\nposting in the threads. Users in this system are used to provide customized\nexperience in the application. They aren't tracked in any form",
				"fields": [
					{
						"name": "avatar",
						"description": "user avatar, a image representing its persona",
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "Avatar",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "createdAt",
						"description": "creation date and time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "id",
						"description": "user identifier",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "ID",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "name",
						"description": "user names",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "Naming",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "updatedAt",
						"description": "last update date and time",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "DateTime",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [
					{
						"kind": "INTERFACE",
						"name": "Node",
						"ofType": null
					},
					{
						"kind": "INTERFACE",
						"name": "Timestamps",
						"ofType": null
					}
				],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "UtcOffset",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "SCALAR",
				"name": "Void",
				"description": null,
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Directive",
				"description": "A Directive provides a way to describe alternate runtime execution and type validation behavior in a GraphQL document.\n\nIn some cases, you need to provide options to alter GraphQL's execution behavior in ways field arguments will not suffice, such as conditionally including or skipping a field. Directives provide this by describing additional information to the executor.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "isRepeatable",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "locations",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "ENUM",
										"name": "__DirectiveLocation",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "args",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false",
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__InputValue",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "ENUM",
				"name": "__DirectiveLocation",
				"description": "A Directive can be adjacent to many parts of the GraphQL language, a __DirectiveLocation describes one such possible adjacencies.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": [
					{
						"name": "QUERY",
						"description": "Location adjacent to a query operation.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "MUTATION",
						"description": "Location adjacent to a mutation operation.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "SUBSCRIPTION",
						"description": "Location adjacent to a subscription operation.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FIELD",
						"description": "Location adjacent to a field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FRAGMENT_DEFINITION",
						"description": "Location adjacent to a fragment definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FRAGMENT_SPREAD",
						"description": "Location adjacent to a fragment spread.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INLINE_FRAGMENT",
						"description": "Location adjacent to an inline fragment.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "VARIABLE_DEFINITION",
						"description": "Location adjacent to a variable definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "SCHEMA",
						"description": "Location adjacent to a schema definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "SCALAR",
						"description": "Location adjacent to a scalar definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "OBJECT",
						"description": "Location adjacent to an object type definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "FIELD_DEFINITION",
						"description": "Location adjacent to a field definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ARGUMENT_DEFINITION",
						"description": "Location adjacent to an argument definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INTERFACE",
						"description": "Location adjacent to an interface definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "UNION",
						"description": "Location adjacent to a union definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ENUM",
						"description": "Location adjacent to an enum definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ENUM_VALUE",
						"description": "Location adjacent to an enum value definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INPUT_OBJECT",
						"description": "Location adjacent to an input object type definition.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INPUT_FIELD_DEFINITION",
						"description": "Location adjacent to an input object field definition.",
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__EnumValue",
				"description": "One possible value for a given Enum. Enum values are unique values, not a placeholder for a string or numeric value. However an Enum value is returned in a JSON response as a string.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "isDeprecated",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "deprecationReason",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Field",
				"description": "Object and Interface types are described by a list of Fields, each of which has a name, potentially a list of arguments, and a return type.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "args",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false",
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__InputValue",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "type",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "__Type",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "isDeprecated",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "deprecationReason",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__InputValue",
				"description": "Arguments provided to Fields or Directives and the input fields of an InputObject are represented as Input Values which describe their type and optionally a default value.",
				"fields": [
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "type",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "__Type",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "defaultValue",
						"description": "A GraphQL-formatted string representing the default value for this input value.",
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "isDeprecated",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "deprecationReason",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Schema",
				"description": "A GraphQL Schema defines the capabilities of a GraphQL server. It exposes all available types and directives on the server, as well as the entry points for query, mutation, and subscription operations.",
				"fields": [
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "types",
						"description": "A list of all types supported by this server.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__Type",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "queryType",
						"description": "The type that query operations will be rooted at.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "OBJECT",
								"name": "__Type",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "mutationType",
						"description": "If this server supports mutation, the type that mutation operations will be rooted at.",
						"args": [],
						"type": {
							"kind": "OBJECT",
							"name": "__Type",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "subscriptionType",
						"description": "If this server support subscription, the type that subscription operations will be rooted at.",
						"args": [],
						"type": {
							"kind": "OBJECT",
							"name": "__Type",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "directives",
						"description": "A list of all directives supported by this server.",
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "LIST",
								"name": null,
								"ofType": {
									"kind": "NON_NULL",
									"name": null,
									"ofType": {
										"kind": "OBJECT",
										"name": "__Directive",
										"ofType": null
									}
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "OBJECT",
				"name": "__Type",
				"description": "The fundamental unit of any GraphQL Schema is the type. There are many kinds of types in GraphQL as represented by the `__TypeKind` enum.\n\nDepending on the kind of a type, certain fields describe information about that type. Scalar types provide no information beyond a name, description and optional `specifiedByUrl`, while Enum types provide their values. Object and Interface types provide the fields they describe. Abstract types, Union and Interface, provide the Object types possible at runtime. List and NonNull types compose other types.",
				"fields": [
					{
						"name": "kind",
						"description": null,
						"args": [],
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "ENUM",
								"name": "__TypeKind",
								"ofType": null
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "name",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "description",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "specifiedByUrl",
						"description": null,
						"args": [],
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "fields",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false",
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__Field",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "interfaces",
						"description": null,
						"args": [],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__Type",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "possibleTypes",
						"description": null,
						"args": [],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__Type",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "enumValues",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false",
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__EnumValue",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "inputFields",
						"description": null,
						"args": [
							{
								"name": "includeDeprecated",
								"description": null,
								"type": {
									"kind": "SCALAR",
									"name": "Boolean",
									"ofType": null
								},
								"defaultValue": "false",
								"isDeprecated": false,
								"deprecationReason": null
							}
						],
						"type": {
							"kind": "LIST",
							"name": null,
							"ofType": {
								"kind": "NON_NULL",
								"name": null,
								"ofType": {
									"kind": "OBJECT",
									"name": "__InputValue",
									"ofType": null
								}
							}
						},
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ofType",
						"description": null,
						"args": [],
						"type": {
							"kind": "OBJECT",
							"name": "__Type",
							"ofType": null
						},
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"inputFields": null,
				"interfaces": [],
				"enumValues": null,
				"possibleTypes": null
			},
			{
				"kind": "ENUM",
				"name": "__TypeKind",
				"description": "An enum describing what kind of type a given `__Type` is.",
				"fields": null,
				"inputFields": null,
				"interfaces": null,
				"enumValues": [
					{
						"name": "SCALAR",
						"description": "Indicates this type is a scalar.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "OBJECT",
						"description": "Indicates this type is an object. `fields` and `interfaces` are valid fields.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INTERFACE",
						"description": "Indicates this type is an interface. `fields`, `interfaces`, and `possibleTypes` are valid fields.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "UNION",
						"description": "Indicates this type is a union. `possibleTypes` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "ENUM",
						"description": "Indicates this type is an enum. `enumValues` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "INPUT_OBJECT",
						"description": "Indicates this type is an input object. `inputFields` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "LIST",
						"description": "Indicates this type is a list. `ofType` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					},
					{
						"name": "NON_NULL",
						"description": "Indicates this type is a non-null. `ofType` is a valid field.",
						"isDeprecated": false,
						"deprecationReason": null
					}
				],
				"possibleTypes": null
			}
		],
		"directives": [
			{
				"name": "deprecated",
				"description": "Marks an element of a GraphQL schema as no longer supported.",
				"isRepeatable": false,
				"locations": [
					"ARGUMENT_DEFINITION",
					"ENUM_VALUE",
					"FIELD_DEFINITION",
					"INPUT_FIELD_DEFINITION"
				],
				"args": [
					{
						"name": "reason",
						"description": "Explains why this element was deprecated, usually also including a suggestion for how to access supported similar data. Formatted using the Markdown syntax, as specified by [CommonMark](https://commonmark.org/).",
						"type": {
							"kind": "SCALAR",
							"name": "String",
							"ofType": null
						},
						"defaultValue": "\"No longer supported\"",
						"isDeprecated": false,
						"deprecationReason": null
					}
				]
			},
			{
				"name": "include",
				"description": "Directs the executor to include this field or fragment only when the `if` argument is true.",
				"isRepeatable": false,
				"locations": ["FIELD", "FRAGMENT_SPREAD", "INLINE_FRAGMENT"],
				"args": [
					{
						"name": "if",
						"description": "Included when true.",
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					}
				]
			},
			{
				"name": "skip",
				"description": "Directs the executor to skip this field or fragment when the `if` argument is true.",
				"isRepeatable": false,
				"locations": ["FIELD", "FRAGMENT_SPREAD", "INLINE_FRAGMENT"],
				"args": [
					{
						"name": "if",
						"description": "Skipped when true.",
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "Boolean",
								"ofType": null
							}
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					}
				]
			},
			{
				"name": "specifiedBy",
				"description": "Exposes a URL that specifies the behaviour of this scalar.",
				"isRepeatable": false,
				"locations": ["SCALAR"],
				"args": [
					{
						"name": "url",
						"description": "The URL that specifies the behaviour of this scalar.",
						"type": {
							"kind": "NON_NULL",
							"name": null,
							"ofType": {
								"kind": "SCALAR",
								"name": "String",
								"ofType": null
							}
						},
						"defaultValue": null,
						"isDeprecated": false,
						"deprecationReason": null
					}
				]
			}
		]
	}
}
